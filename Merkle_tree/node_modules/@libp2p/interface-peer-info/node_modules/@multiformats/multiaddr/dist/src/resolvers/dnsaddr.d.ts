import type { Resolver } from '@libp2p/interface-peer-info/node_modules/@multiformats/multiaddr/resolvers';
import type { AbortOptions } from '@libp2p/interface-peer-info/node_modules/@multiformats/multiaddr';
import type { DNS } from '@multiformats/dns';
export interface DNSADDROptions extends AbortOptions {
    /**
     * An optional DNS resolver
     */
    dns?: DNS;
    /**
     * When resolving DNSADDR Multiaddrs that resolve to other DNSADDR Multiaddrs,
     * limit how many times we will recursively resolve them.
     *
     * @default 32
     */
    maxRecursiveDepth?: number;
}
export declare const dnsaddrResolver: Resolver<DNSADDROptions>;
//# sourceMappingURL=dnsaddr.d.ts.map